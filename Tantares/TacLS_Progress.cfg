//Progress forward section
@PART[Hamal_Habitation_1]:AFTER[TacLifeSupport]
{
  @RESOURCE[Food]
  {
    @amount = 526
    @maxAmount = 526
  }
  @RESOURCE[Water]
  {
    @amount = 348
    @maxAmount = 348
  }
  @RESOURCE[Oxygen]
  {
    @amount = 53298
    @maxAmount = 53298
  }
}


//Progress control block
@PART[Hamal_Control_1]:NEEDS[TacLifeSupport]:AFTER[TacLifeSupport]
{
    MODULE
    {
      name = TacGenericConverter
      ConverterName = Fuel Cell
      StartActionName = Start Fuel Cell
      StopActionName = Stop Fuel Cell
      ToggleActionName = Toggle Fuel Cell
      tag = Life Support
      GeneratesHeat = false
      conversionRate = 3.06

      INPUT_RESOURCE
      {
        ResourceName = Oxygen
        Ratio = 0.007046915762
      }
      INPUT_RESOURCE
      {
        ResourceName = Hydrogen
        Ratio = 0.01392577843
      }

      // Meets 100% of Kerbals water needs, >180% of EC needs. DumpExcess enabled to assure both are produced.
      OUTPUT_RESOURCE
      {
        ResourceName = ElectricCharge
        Ratio = 0.0654430501 // compared to the Water Splitter, this produces 40% of the EC the Water Splitter consumes reversing the process, assuming Water Splitter Waste is Hydrogen.
        DumpExcess = true
      }
      OUTPUT_RESOURCE
      {
        ResourceName = Water
        Ratio = 0.0000111880787
        DumpExcess = true
      }
    }
}

@PART[Hamal_Control_1]:NEEDS[TacLifeSupport]:AFTER[TacLifeSupport]
{


	// The large amount of Oxygen and Hydrogen needed for the fuel cells would be stored in liquid form.
	// To eliminate the need for an evaporator and avoid confusion with fuel they are added as a gas.
	// 1 liter of LOX/LH2 is about 800 liters of gas. Boiloff is not a factor in small insulated
	// containers like this.
    RESOURCE
    {
        name = Oxygen
		amount = 4657.730 // fuel cell for 15 days
        maxAmount = #$amount$
    }
	RESOURCE
    {
        name = Hydrogen
        amount = 9204.383  // fuel cell for 15 days
        maxAmount = #$amount$
    }
	@MODULE[TacGenericConverter]
	{
		@conversionRate = 2.04
	}
}
